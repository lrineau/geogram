<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0-608cb11914-20190413 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/bin/test_CDT_2d /home/runner/work/geogram/geogram/tests/data/CDT2d/constraints_100K.obj</line>
</preamble>

<pid>6587</pid>
<ppid>6447</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--verbose</arg>
    <arg>--xml=yes</arg>
    <arg>--leak-check=full</arg>
    <arg>--show-reachable=yes</arg>
    <arg>--error-limit=no</arg>
    <arg>--xml-file=test_CDT_2d30.memcheck</arg>
    <arg>--suppressions=/home/runner/work/geogram/geogram/tools/valgrind.supp</arg>
  </vargv>
  <argv>
    <exe>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/bin/test_CDT_2d</exe>
    <arg>/home/runner/work/geogram/geogram/tests/data/CDT2d/constraints_100K.obj</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.021 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4D50F5A</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.1-rc</obj>
      <fn>fill_window</fn>
    </frame>
    <frame>
      <ip>0x4D51C1F</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.1-rc</obj>
      <fn>deflate_fast</fn>
    </frame>
    <frame>
      <ip>0x4D52783</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.1-rc</obj>
      <fn>deflate.part.0</fn>
    </frame>
    <frame>
      <ip>0x4D57474</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.1-rc</obj>
      <fn>gz_comp</fn>
    </frame>
    <frame>
      <ip>0x4D576C4</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.1-rc</obj>
      <fn>gz_write</fn>
    </frame>
    <frame>
      <ip>0x4D57819</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.1-rc</obj>
      <fn>gzwrite</fn>
    </frame>
    <frame>
      <ip>0x492408F</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.1-rc</obj>
      <fn>GEO::OutputGeoFile::write_attribute(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, unsigned long, void const*)</fn>
    </frame>
    <frame>
      <ip>0x49F9537</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.1-rc</obj>
      <fn>GEO::GeogramIOHandler::save_attributes(GEO::OutputGeoFile&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, GEO::AttributesManager&amp;)</fn>
    </frame>
    <frame>
      <ip>0x49FA0B9</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.1-rc</obj>
      <fn>GEO::GeogramIOHandler::save(GEO::Mesh const&amp;, GEO::OutputGeoFile&amp;, GEO::MeshIOFlags const&amp;, bool)</fn>
    </frame>
    <frame>
      <ip>0x49DE00E</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.1-rc</obj>
      <fn>GEO::GeogramIOHandler::save(GEO::Mesh const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, GEO::MeshIOFlags const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x49DC212</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.1-rc</obj>
      <fn>GEO::mesh_save(GEO::Mesh const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, GEO::MeshIOFlags const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x10B1B9</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/bin/test_CDT_2d</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:06.688 </time>
</status>

<error>
  <unique>0xac</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>112 bytes in 1 blocks are definitely lost in loss record 2 of 2</text>
    <leakedbytes>112</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4929927</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.1-rc</obj>
      <fn>GEO::Logger::Logger()</fn>
    </frame>
    <frame>
      <ip>0x4929E0C</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.1-rc</obj>
      <fn>GEO::Logger::initialize()</fn>
    </frame>
    <frame>
      <ip>0x490086C</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.1-rc</obj>
      <fn>GEO::initialize(int)</fn>
    </frame>
    <frame>
      <ip>0x10A7BF</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/bin/test_CDT_2d</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<errorcounts>
  <pair>
    <count>171</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
  <pair>
    <count>1</count>
    <name>Vorpaline_gomp_64bits_leak_2</name>
  </pair>
</suppcounts>

</valgrindoutput>

